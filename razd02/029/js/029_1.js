/*
Задачи:

1) Создайте функцию, которая будет вычислять объем и площадь полной поверхности куба 
(тоже базовая математика, иногда используется в создании анимаций). 
Эта функция принимает в себя целое число со значением длины ребра куба. 
Ответ выведите в формате строки, который изображен в примерах.

Если в функцию попал неправильный аргумент или вычислить значения невозможно - вернуть строку "При вычислении произошла ошибка"

НЕ ИСПОЛЬЗУЙТЕ ОПЕРАТОР СТЕПЕНИ ** - в онлайн среде браузера он не работает и тесты будут ломаться. 
Это из-за того, что этот оператор из более нового стандарта, чем тут доступен.

Примеры:
calculateVolumeAndArea(5)  => 'Объем куба: 125, площадь всей поверхности: 150'
calculateVolumeAndArea(15)  => 'Объем куба: 3375, площадь всей поверхности: 1350'
calculateVolumeAndArea(15.5)  => 'При вычислении произошла ошибка'
calculateVolumeAndArea('15')  => 'При вычислении произошла ошибка'
calculateVolumeAndArea(-15)  => 'При вычислении произошла ошибка'
*/

/*
2) Постепенно переходим к более реалистичным задачам :) Вы обнаружите, что там используется все тоже самое.

Напишите функцию, которая будет определять номер купе по переданному ей номеру места. 
Наглядно:
Функция принимает только целое число от 1 до 36.
Если переданный аргумент не число, отрицательное или дробное - возвращается сообщение:
"Ошибка. Проверьте правильность введенного номера места"
Если число 0 или больше 36, то сообщение: "Таких мест в вагоне не существует"

Пример:
getCoupeNumber(33)  => 9
getCoupeNumber(7)  => 2
getCoupeNumber(300)  => "Таких мест в вагоне не существует"
getCoupeNumber(0)  => "Таких мест в вагоне не существует"
getCoupeNumber(7.7)  => "Ошибка. Проверьте правильность введенного номера места"
getCoupeNumber(-10)  => "Ошибка. Проверьте правильность введенного номера места"
getCoupeNumber('Hello')  => "Ошибка. Проверьте правильность введенного номера места"

Такая функция вполне реальна и может использоваться для формирования билетов, в том числе и визуально на сайтах. 
Конечно, там будет куда больше условий, но смысл остается таким же.
*/
'use strict';

function calculateVolumeAndArea(lengthRib) {
	if ( typeof(lengthRib) != 'number' || lengthRib < 0 || !Number.isInteger(lengthRib) ) {
		return 'При вычислении произошла ошибка';
	}
	const v3 = lengthRib*lengthRib*lengthRib;
	const s2 = lengthRib*lengthRib*6;
	return `Объем куба: ${v3}, площадь всей поверхности: ${s2}`;
}

console.log('\n1', calculateVolumeAndArea( 5   ), '\n>', 'Объем куба: 125, площадь всей поверхности: 150');
console.log('\n2', calculateVolumeAndArea( 15  ), '\n>', 'Объем куба: 3375, площадь всей поверхности: 1350');
console.log('\n3', calculateVolumeAndArea( 15.5), '\n>', 'При вычислении произошла ошибка');
console.log('\n4', calculateVolumeAndArea('15'),  '\n>', 'При вычислении произошла ошибка');
console.log('\n5', calculateVolumeAndArea( -15 ), '\n>', 'При вычислении произошла ошибка');

function getCoupeNumber( numberPlase ){
	if( typeof(numberPlase) != 'number' || numberPlase < 0 || !Number.isInteger(numberPlase) ) {
		return 'Ошибка. Проверьте правильность введенного номера места';
	}	else if(numberPlase == 0 || numberPlase > 36) {
		return 'Таких мест в вагоне не существует';
	}
	return Math.ceil(numberPlase / 4);
}

console.log('\n1', getCoupeNumber(33     ), '\n>', 9);
console.log('\n2', getCoupeNumber(7      ), '\n>', 2);
console.log('\n3', getCoupeNumber(300    ), '\n>', 'Таких мест в вагоне не существует');
console.log('\n4', getCoupeNumber(0      ), '\n>', 'Таких мест в вагоне не существует');
console.log('\n5', getCoupeNumber(7.7    ), '\n>', 'Ошибка. Проверьте правильность введенного номера места');
console.log('\n6', getCoupeNumber(-10    ), '\n>', 'Ошибка. Проверьте правильность введенного номера места');
console.log('\n7', getCoupeNumber('Hello'), '\n>', 'Ошибка. Проверьте правильность введенного номера места');
console.log();
for (let i = 0; i <= 9; i++) {
	console.log(`${i} = ${getCoupeNumber(i)}`);
}
